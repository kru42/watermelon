assert(getprop("ro.product.device") == "nitrogen" || getprop("ro.build.product") == "nitrogen" || abort("E3004: This package is for device: nitrogen; this device is " + getprop("ro.product.device") + "."););
assert(nitrogen.verify_trustzone("TZ.BF.4.0.7.C3-00007") == "1");
ui_print("Target: Xiaomi/nitrogen/nitrogen:9/PKQ1.181007.001/V10.3.1.0.PEDCNXM:user/release-keys");
ifelse(is_mounted("/system"), unmount("/system"));
package_extract_dir("install", "/tmp/install");
set_metadata_recursive("/tmp/install", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644);
set_metadata_recursive("/tmp/install/bin", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system", "");
run_program("/tmp/install/bin/backuptool.sh", "backup", "/system");
unmount("/system");
ui_print("*****************************************************");
ui_print("                                                     ");
ui_print("         dMP dMP .aMMMb  dMP dMP .aMMMb  .aMMMb      ");
ui_print("        dMP dMP dMP'dMP dMP dMP dMP'dMP dMP'VMP      ");
ui_print("       dMMMMMP dMMMMMP dMP dMP dMP dMP dMP           ");
ui_print("      dMP dMP dMP dMP  YMvAP' cMP.aMP dMP.aMP        ");
ui_print("     dMP dMP dMP dMP    VP'   VMMMP'  VMMMP'         ");
ui_print("                                                     ");
ui_print("*****************************************************");
ui_print("****************** Android 9.0 Pie ******************");
ui_print("**************** Welcome to Havoc-OS ****************");
ui_print("*****************************************************");
ui_print(" Android Version : 9");
ui_print(" Build ID        : PQ3B.190801.002");
ui_print(" Build Date      : Fri Sep 13 16:50:55 UTC 2019");
ui_print(" Security Patch  : 2019-09-05");
ui_print(" Device          : nitrogen");
ui_print(" Manufacturer    : Xiaomi");
ui_print("*****************************************************");
ui_print("*****************************************************");
show_progress(0.650000, 0);
ui_print("Patching system image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/system", package_extract_file("system.transfer.list"), "system.new.dat.br", "system.patch.dat") ||
  abort("E1001: Failed to update system image.");
show_progress(0.100000, 0);
ui_print("Patching vendor image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/vendor", package_extract_file("vendor.transfer.list"), "vendor.new.dat.br", "vendor.patch.dat") ||
  abort("E2001: Failed to update vendor image.");
show_progress(0.020000, 10);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system", "");
run_program("/tmp/install/bin/backuptool.sh", "restore", "/system");
unmount("/system");
show_progress(0.050000, 5);
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot");
show_progress(0.200000, 10);
set_progress(1.000000);
